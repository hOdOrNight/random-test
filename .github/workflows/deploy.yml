name: Deploy Spring App to Cloud Run

on:
  push:
    branches: [master]

env:
  PROJECT_ID: bright-link-466516-a1
  REGION: us-central1
  SERVICE_NAME: spring-app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Manually activate service account
        run: |
          echo "$GCP_SA_KEY" > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud config set project $PROJECT_ID
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Show active credentials
        run: gcloud auth list

      - name: Show active access token (just to confirm auth works)
        run: gcloud auth print-access-token

      # ðŸ‘‡ Then continue with your build/push/deploy steps
      - name: Build Spring Boot app
        run: mvn clean package -DskipTests

      - name: Build and Push Docker Image
        run: |
          IMAGE="us-central1-docker.pkg.dev/$PROJECT_ID/spring-run-repo/$SERVICE_NAME"
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image us-central1-docker.pkg.dev/$PROJECT_ID/spring-run-repo/$SERVICE_NAME \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated